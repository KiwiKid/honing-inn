package main

import (
    "fmt"
    "github.com/dustin/go-humanize"
)
templ pointListLoad(){
    <div hx-get="/homes?viewMode=list" hx-trigger="revealed">loading points...</div>
}


templ pointListTable(homes []Home, msg string){
    <div style="margin-top: 16px;" hx-target="this">
        if len(msg) > 0 {
            <div style="color: #EF4444; font-size: 14px; margin-bottom: 16px;">{ msg }</div>
        }
        for _, h := range homes {
            @point(h)
        }
    </div>
}

templ point(home Home){
    <div data-home={ templ.JSONString(home) } style="line-height:12px; display: flex; flex-direction: column; padding: 2px; border: 1px solid #e5e7eb; border-radius: 8px; background-color: #ffffff; box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.05); margin-bottom: 2px;">
        <div style="display: flex; margin-bottom: 2px;">
            <span style="font-weight: 600; width: 96px;">ID:</span>
            <span>{ fmt.Sprintf("%d",home.ID) }</span>
        </div>
        <div style="display: flex; margin-bottom: 2px;">
            <span style="font-weight: 600; width: 96px;">PointType:</span>
            <span>{ home.PointType }</span>
        </div>
        <div style="display: flex; margin-bottom: 2px;">
            <span style="font-weight: 600; width: 96px;">Title:</span>
            <span>{ home.Title }</span>
        </div>
        <div style="display: flex; margin-bottom: 2px;">
            <span style="font-weight: 600; width: 96px;">Url:</span>
            <span style="overflow: hidden; text-overflow: ellipsis; white-space: nowrap;">{ home.Url }</span>
        </div>
        if len(home.ImageUrl) > 0 {
            <div style="display: flex; margin-bottom: 2px;">
                <img width="280px" src={ home.ImageUrl }/>
            </div>
        }
        <div style="display: flex; margin-bottom: 2px;">
            <span style="font-weight: 600; width: 96px;">Notes:</span>
            <span>{ home.Notes }</span>
        </div>
        if !home.RemoveRequestAt.IsZero(){

            <div style="display: flex; margin-bottom: 2px;">
                <span style="font-weight: 600; width: 96px;">RemoveRequestAt:</span>
                <span>   ({ humanize.Time(home.RemoveRequestAt) })</span>
            </div>
        }
        <div style="float: right">
            <button hx-get={ fmt.Sprintf("/homes/%d?viewMode=edit", home.ID) } class="btn-edit">Edit</button>
        </div>
    </div>
}


templ homeView(home Home, msg string, pointMeta PointMeta, ratings []HomeFactorAndRating) {
    <div class="space-y-4" hx-target="this">
        <!-- Display message -->
         if len(msg) > 0 {
            <div class="text-red-500">{ msg }</div>
        }
    
        <div style="font-size: 2rem">
            <a  href={ templ.SafeURL(home.Url) }>{home.Title}</a>
        </div>

        if len(home.ImageUrl) > 0 {
        <div>
            <img width="280px" src={ home.ImageUrl }/>
        </div>
        }

        <div>
            <div class="text-gray-900">{ home.Notes }</div>
        </div>

        <div style="float: right">
            <button hx-get={ fmt.Sprintf("/homes/%d?viewMode=edit", home.ID) } class="btn-edit">Edit</button>
        </div>
        @ratingListView(ratings)
    </div>
}

templ homeForm(pointMeta PointMeta, lat string, lng string, msg string){
   <form hx-post="/homes?viewMode=edit" class="space-y-4" hx-target="this">
    if len(msg) > 0 {
        <div class="text-red-500">{ msg }</div>
    }

    <!-- Hidden inputs -->
    <input type="hidden" name="lat" value={ fmt.Sprintf("%v", lat) }>
    <input type="hidden" name="lng" value={ fmt.Sprintf("%v", lng) }>

    <!-- Select dropdown -->
    <div>
        <label for="pointType" class="block text-sm font-medium text-gray-700">Point Type</label>
        <select name="pointType" id="pointType" class="form-input mt-1 block w-full">
            for _, h := range pointMeta.types {
                <option value={ h.Name }>{ h.Name }</option>
            }
        </select>
    </div>

    <!-- Latitude and Longitude -->
    <div class="text-sm text-gray-500">
        { fmt.Sprintf("[%v, %v]", lat, lng) }
    </div>

    <!-- Buttons -->
    <div class="flex space-x-4">
        <button type="submit" class="form-button">Create Point</button>
        <button type="button" class="form-button bg-gray-500 hover:bg-gray-600" onclick="location.reload();">Cancel</button>
    </div>
</form>

}

templ populatedMetaFields(meta *SiteMeta){
    if meta != nil {
        
       @tick("got meta data")
        @urlInput(meta.Url, meta.Title, true)
        <div id="title-box" hx-swap-oob="true" hx-swap="outerHTML">
            <label for="title" class="block text-sm font-medium text-gray-700">Title</label>
            <input  type="text" name="title" id="title" value={ meta.Title } class="form-input mt-1 block w-full">
        </div>
        <div id="notes-box" hx-swap-oob="true" hx-swap="outerHTML">
            <label for="notes" class="block text-sm font-medium text-gray-700">Notes</label>
            <input  type="text" name="notes" id="notes" value={ meta.Description } class="form-input mt-1 block w-full">
        </div>
        @imageInput(meta.MetaImage, true)
    }else{
        { fmt.Sprintf("%+v", meta) }
    }

}

templ urlInput(url string, title string, oob bool){
    <div id="url-box" style="padding-bottom: 10px"
    if oob {
        hx-swap-oob="true"
    }
    >
        
            <label for="url" class="block text-sm font-medium text-gray-700">
                if len(title) == 0 {
                    @pending()
                } else {
                    @tick("got title")
                }
            URL
                
            <input 
            if len(title) == 0 {
                    hx-post="/homes/url"
                    hx-trigger="blur"
                    hx-target="#url-box"
                    hx-swap="outerHTML"
            }
               type="text" name="url" id="url" value={ url } class="form-input mt-1 block w-full">
            </label>
        </div>
}

templ imageInput(url string, oob bool){
    <div id="img-box"
        if oob {
            hx-swap-oob="true"
        }
    >
        <label for="imageUrl" class="block text-sm font-medium text-gray-700">Image</label>
        <input type="text" name="imageUrl" id="imageUrl" value={ url} class="form-input mt-1 block w-full">
        <img width="280px" 
            if len(url) == 0 {
                height="100px"
            }
            src={ url }/>
    </div>
}


templ homeEditForm(home Home, msg string, pointMeta PointMeta, ratings []HomeFactorAndRating){
    <div hx-target="this">
    <form hx-post="/homes?viewMode=view" class="space-y-4 homeEditForm" >
        if len(msg) > 0 {
            <div class="text-red-500">{msg}</div>
        }

        <!-- Hidden inputs -->
        <input type="hidden" name="ID" value={ fmt.Sprintf("%d", home.ID) }>
        <input type="hidden" name="lat" value={ fmt.Sprintf("%v", home.Lat) }>
        <input type="hidden" name="lng" value={ fmt.Sprintf("%v", home.Lng) }>



        @urlInput(home.Url, home.Title, false)


        <!-- Labeled input fields -->
        <div id="title-box">
            <label for="title" class="block text-sm font-medium text-gray-700">Title</label>
            <input  type="text" name="title" id="title" value={ home.Title } class="form-input mt-1 block w-full">
        </div>


        <div id="notes-box">
            <label for="notes" class="block text-sm font-medium text-gray-700">Notes</label>
            <input type="text" name="notes" id="notes" value={ home.Notes } class="form-input mt-1 block w-full">
        </div>

        @imageInput(home.ImageUrl, false)


        if !home.RemoveRequestAt.IsZero(){
            <div style="padding: 5px;">
            ({ humanize.Time(home.RemoveRequestAt) })
        </div>
        }
         
        <!-- Buttons -->
        <div class="flex space-x-4">
            <button type="submit" class="form-button">Save</button>
            <button type="button" class="form-button bg-red-500 hover:bg-red-600" hx-delete={ fmt.Sprintf("/homes/%d", home.ID) } hx-confirm="are you sure you want to delete this house?">Delete</button>
            <button type="button" class="form-button bg-gray-500 hover:bg-gray-600" onclick="location.reload();">Cancel</button>
        </div>

        
    </form>
    @factorVoteList(ratings, home, "")
    </div>
}
